version: "3"
services:

 db:
  image: postgres:latest
  restart: unless-stopped
  container_name: database
  env_file:
   - .env
  networks:
   - backend_network

 webapp:
  build: ./back
  container_name: webapp
  restart: unless-stopped
  ports:
   - "8000:8000"
  env_file:
   - .env
  depends_on:
   - db
   - redis
  links:
   - db:db
  volumes:
   - ./back:/back
  entrypoint: "bash /back/docker-entrypoint.sh"
  command: "runserver 0.0.0.0:8000"
  networks: 
   - nginx_network
   - backend_network

 redis:
  image: redis:alpine
  container_name: redis
  networks: 
   - backend_network

 celery:
  container_name: celery
  restart: always
  build: ./back
  entrypoint: "celery -A config worker -l info"
  volumes:
   - ./back:/back
  env_file:
   - .env
  depends_on:
   - db
   - redis
   - webapp
  networks: 
   - backend_network

 celery-beat:
  container_name: celery-beat
  restart: always
  build: ./back
  entrypoint: "celery -A config beat -l info"
  volumes:
   - ./back:/back
  env_file:
   - .env
  depends_on:
   - db
   - redis
   - webapp
  networks: 
   - backend_network

 front:
  build: ./front
  container_name: front
  volumes:
   - './front:/app'
   - '/app/node_modules'
  ports:
   - '8081:8080'
  networks:
   - nginx_network
  depends_on:
   - db

networks:
 nginx_network:
  driver: bridge
 backend_network:
  driver: bridge
